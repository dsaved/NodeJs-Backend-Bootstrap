{
  "name": "antimmu-api",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "check:cycles": "madge --circular --extensions ts ./src",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "typeorm": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js",
    "migration:generate": "npm run typeorm migration:generate -- -d ./src/config/typeorm.config.ts",
    "migration:create": "npm run typeorm migration:create",
    "migration:run": "npm run typeorm migration:run -- -d ./src/config/typeorm.config.ts",
    "migration:revert": "npm run typeorm migration:revert -- -d ./src/config/typeorm.config.ts",
    "migration:show": "npm run typeorm migration:show -- -d ./src/config/typeorm.config.ts",
    "migration:drop": "npm run typeorm schema:drop -- -d ./src/config/typeorm.config.ts",
    "migration:reset": "npm run typeorm schema:drop -- -d ./src/config/typeorm.config.ts && npm run typeorm schema:sync -- -d ./src/config/typeorm.config.ts",
    "migration:sync": "npm run typeorm schema:sync -- -d ./src/config/typeorm.config.ts",
    "seed:run": "ts-node ./node_modules/typeorm-extension/bin/cli.cjs seed:run -d ./src/config/typeorm.config.ts"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.600.0",
    "@aws-sdk/client-sqs": "^3.600.0",
    "@aws-sdk/s3-request-presigner": "^3.600.0",
    "@nestjs/common": "10.4.16",
    "@nestjs/core": "10.4.16",
    "@nestjs/jwt": "10.2.0",
    "@nestjs/mapped-types": "2.1.0",
    "@nestjs/passport": "10.0.3",
    "@nestjs/platform-express": "10.4.16",
    "@nestjs/platform-socket.io": "10.4.16",
    "@nestjs/typeorm": "10.0.2",
    "@nestjs/websockets": "10.4.16",
    "@types/aws-lambda": "^8.10.140",
    "@vendia/serverless-express": "^4.12.6",
    "axios": "^1.7.2",
    "bcryptjs": "^2.4.3",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "crypto-js": "^4.2.0",
    "dotenv": "^16.4.5",
    "form-data": "4.0.4",
    "helmet": "^7.1.0",
    "html-to-text": "^9.0.5",
    "moment": "^2.30.1",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "pg": "^8.12.0",
    "qrcode": "^1.5.4",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.1",
    "sequelize-typescript": "^2.1.6",
    "serverless": "^3.34.0",
    "serverless-dotenv-plugin": "^6.0.0",
    "serverless-jetpack": "^0.11.2",
    "serverless-offline": "^13.3.3",
    "serverless-plugin-typescript": "^2.1.5",
    "socket.io": "^4.7.5",
    "speakeasy": "^2.0.0",
    "typeorm": "^0.3.20",
    "typeorm-extension": "^3.6.3",
    "umzug": "^3.8.2",
    "uuid": "^10.0.0"
  },
  "devDependencies": {
    "@nestjs/cli": "10.4.9",
    "@nestjs/schematics": "10.2.3",
    "@nestjs/testing": "10.4.16",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.3.1",
    "@types/supertest": "^6.0.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "madge": "^8.0.0",
    "prettier": "^3.0.0",
    "sequelize-cli": "^6.6.2",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
